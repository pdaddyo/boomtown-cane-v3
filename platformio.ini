; PlatformIO Project Configuration File
;
;   Build options: build flags, source filter
;   Upload options: custom upload port, speed and extra flags
;   Library options: dependencies, extra library storages
;   Advanced options: extra scripting
;
; Please visit documentation for the other options and examples
; https://docs.platformio.org/page/projectconf.html

[platformio]
default_envs = lolin_s3_mini_1_69 ; Waveshare ESP32-S3-Touch-LCD-1.69

[env]
lib_deps = lvgl/lvgl@^8.3.1
build_flags = 
  ; -D LV_LVGL_H_INCLUDE_SIMPLE

[emulator_64]
platform = native@^1.1.3
extra_scripts = support/sdl2_build_extra.py
build_flags =
  ${env.build_flags}
  ; -D LV_LOG_LEVEL=LV_LOG_LEVEL_INFO
  ; -D LV_LOG_PRINTF=1
  ; Add recursive dirs for hal headers search
  !python -c "import os; print(' '.join(['-I {}'.format(i[0].replace('\x5C','/')) for i in os.walk('hal/sdl2')]))"
  -lSDL2
  ; SDL drivers options
  -D LV_LVGL_H_INCLUDE_SIMPLE
  ; -D LV_CONF_INCLUDE_SIMPLE
  -D LV_CONF_PATH="${PROJECT_DIR}/include/lv_conf.h"
  -D LV_MEM_CUSTOM=1
  -D LV_USE_QRCODE=1
  -D LV_DRV_NO_CONF
  -D USE_SDL
  -D SDL_HOR_RES=240
  -D SDL_VER_RES=280  
  -D SDL_ZOOM=1

  
lib_deps =
  ${env.lib_deps}
  ; Use direct URL, because package registry is unstable
  ;lv_drivers@~8.2.0
  lv_drivers=https://github.com/lvgl/lv_drivers/archive/refs/tags/v8.2.0.zip
build_src_filter =
  +<*>
  +<../hal/sdl2>

[emulator_32]
extends = emulator_64
build_flags =
  ${emulator_64.build_flags}
  -m32
build_src_filter =
  ${emulator_64.build_src_filter}

[env:windows_64]
extends = emulator_64
build_flags =
  ${emulator_64.build_flags}
  -L C:/msys64/mingw64/lib/ ; Windows
  -D SDL_INCLUDE_PATH="\"C:/msys64/mingw64/include/SDL2/SDL.h\"" ; Windows
build_src_filter =
  ${emulator_64.build_src_filter}

[env:mac_64]
extends = emulator_64
build_flags =
  ${emulator_64.build_flags}
  ; -arch arm64 ; MACOS with apple silicon (eg M1)
  -D SDL_INCLUDE_PATH="\"SDL2/SDL.h"\" ;MACOS
  !find /opt/homebrew/Cellar/sdl2 -name "include" | sed "s/^/-I /" ;MACOS
  !find /opt/homebrew/Cellar/sdl2 -name "libSDL2.a" | xargs dirname | sed "s/^/-L /" ;MACOS
build_src_filter =
  ${emulator_64.build_src_filter}

[esp32]
lib_deps = 
	${env.lib_deps}
	lovyan03/LovyanGFX@^1.1.16
	fbiego/Timber@^1.0.0
build_flags = 
  ; Add recursive dirs for hal headers search
  !python -c "import os; print(' '.join(['-I {}'.format(i[0].replace('\x5C','/')) for i in os.walk('hal/esp32')]))"
  -D LV_CONF_PATH="${PROJECT_DIR}/include/lv_conf.h"
  -I lib
  -D LV_TICK_CUSTOM=1
  -D LV_MEM_CUSTOM=0
build_src_filter =
  +<*>
  +<../hal/esp32>

; ESP32-S3-Touch-LCD-1.69
[env:lolin_s3_mini_1_69]
platform = espressif32
board = esp32-s3-devkitc-1
framework = arduino
board_upload.flash_size = 16MB
board_upload.speed = 921600
monitor_speed = 115200
debug_tool = esp-builtin
board_build.flash_mode = qio
board_build.f_flash = 80000000L
board_build.partitions = app3M_fat9M_16MB.csv ;partitions.csv
; board_build.psram_type = opi
; board_build.arduino.memory_type = opi_qspi
lib_deps = 
	${esp32.lib_deps}
  Qmi8658c=https://github.com/fbiego/Qmi8658c/archive/refs/tags/1.0.1.zip
  fastled/FastLED@^3.9.16
  jrowberg/I2Cdevlib-Core
build_flags = 
  ${esp32.build_flags}
  -DARDUINO_USB_CDC_ON_BOOT=1
	-D ESPS3_1_69=1
  -D LV_MEM_SIZE=120U*1024U
  -DARDUINO_USB_MODE=1
  -DARDUINO_RUNNING_CORE=1
  -DARDUINO_EVENT_RUNNING_CORE=1
  ; -D ENABLE_CUSTOM_FACE=1 ; custom watchface crashes firmware, disable it
  -D LV_USE_QRCODE=1
build_src_filter =
  ${esp32.build_src_filter}